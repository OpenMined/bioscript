name: Publish to PyPI

on:
  workflow_dispatch:
    inputs:
      bump:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
          - custom
        default: 'patch'
      custom_version:
        description: 'Custom version (only if bump=custom, e.g., 0.2.0)'
        required: false
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        run: uv python install 3.8

      - name: Get current version
        id: current
        run: |
          CURRENT=$(grep '^__version__ = ' python/src/bioscript/__init__.py | cut -d'"' -f2)
          echo "version=${CURRENT}" >> $GITHUB_OUTPUT
          echo "Current version: ${CURRENT}"

      - name: Calculate new version
        id: new
        run: |
          CURRENT="${{ steps.current.outputs.version }}"
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT"

          case "${{ inputs.bump }}" in
            major)
              NEW_VERSION="$((MAJOR + 1)).0.0"
              ;;
            minor)
              NEW_VERSION="${MAJOR}.$((MINOR + 1)).0"
              ;;
            patch)
              NEW_VERSION="${MAJOR}.${MINOR}.$((PATCH + 1))"
              ;;
            custom)
              NEW_VERSION="${{ inputs.custom_version }}"
              ;;
          esac

          echo "version=${NEW_VERSION}" >> $GITHUB_OUTPUT
          echo "New version: ${NEW_VERSION}"

      - name: Bump version across repository
        run: |
          ./bump_version.sh "${{ steps.new.outputs.version }}"

      - name: Install dependencies
        run: |
          cd python
          uv sync --all-extras

      - name: Run tests
        run: |
          cd python
          uv run pytest

      - name: Build package
        run: |
          cd python
          uv build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: python/dist/
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Commit version bump and tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "Bump version to ${{ steps.new.outputs.version }}"
          git tag "v${{ steps.new.outputs.version }}"
          git push origin main --tags
